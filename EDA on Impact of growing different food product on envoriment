{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled3.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyO4hBYGTEPlyB+aedcCA6Pv",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ved4589ved/2048/blob/master/EDA%20on%20Impact%20of%20growing%20different%20food%20product%20on%20envoriment\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ru6ukLxO6vl0"
      },
      "source": [
        "%load_ext rpy2.ipython"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rtakqTqw6xIe"
      },
      "source": [
        "%%R\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1xIoTfCI7zde"
      },
      "source": [
        " ! pip install -q kaggle"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nB3BO4HG_o9S"
      },
      "source": [
        "import os"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V9A27oGo_pGz"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4HT05y3e70x8"
      },
      "source": [
        "from google.colab import files"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 91
        },
        "id": "kCHao9lV8ikb",
        "outputId": "ade40e09-100f-43fb-d801-cb1b5c8130ce"
      },
      "source": [
        "files.upload()"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-3182a872-5944-4503-8162-6e9a3d77cef4\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-3182a872-5944-4503-8162-6e9a3d77cef4\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving kaggle.json to kaggle.json\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'kaggle.json': b'{\"username\":\"vedprakash8\",\"key\":\"351175d5ebab2d4173d2c1c49b3b5be2\"}'}"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JNSKZoDr8oIq"
      },
      "source": [
        "! mkdir ~/.kaggle"
      ],
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MlNPOyq-800y"
      },
      "source": [
        "! cp kaggle.json ~/.kaggle/"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "df2B9mNJ87eS"
      },
      "source": [
        "! chmod 600 ~/.kaggle/kaggle.json"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "38hee_2U9ApM"
      },
      "source": [
        ""
      ],
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "emk3WpYc9NH6"
      },
      "source": [
        ""
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Nxet2rrA9pMq",
        "outputId": "d1b55560-2a19-403e-b892-5ec843c09d92"
      },
      "source": [
        "! kaggle datasets download -d selfvivek/environment-impact-of-food-production"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading environment-impact-of-food-production.zip to /content\n",
            "\r  0% 0.00/3.55k [00:00<?, ?B/s]\n",
            "\r100% 3.55k/3.55k [00:00<00:00, 3.30MB/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uypDvAl1-OSS"
      },
      "source": [
        "! mkdir train"
      ],
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6BvfoJfm-cI6",
        "outputId": "1e8cd3ba-d2b6-4062-804f-dbe624f13eb7"
      },
      "source": [
        "! unzip -d selfvivek/environment-impact-of-food-production"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "UnZip 6.00 of 20 April 2009, by Debian. Original by Info-ZIP.\n",
            "\n",
            "Usage: unzip [-Z] [-opts[modifiers]] file[.zip] [list] [-x xlist] [-d exdir]\n",
            "  Default action is to extract files in list, except those in xlist, to exdir;\n",
            "  file[.zip] may be a wildcard.  -Z => ZipInfo mode (\"unzip -Z\" for usage).\n",
            "\n",
            "  -p  extract files to pipe, no messages     -l  list files (short format)\n",
            "  -f  freshen existing files, create none    -t  test compressed archive data\n",
            "  -u  update files, create if necessary      -z  display archive comment only\n",
            "  -v  list verbosely/show version info       -T  timestamp archive to latest\n",
            "  -x  exclude files that follow (in xlist)   -d  extract files into exdir\n",
            "modifiers:\n",
            "  -n  never overwrite existing files         -q  quiet mode (-qq => quieter)\n",
            "  -o  overwrite files WITHOUT prompting      -a  auto-convert any text files\n",
            "  -j  junk paths (do not make directories)   -aa treat ALL files as text\n",
            "  -U  use escapes for all non-ASCII Unicode  -UU ignore any Unicode fields\n",
            "  -C  match filenames case-insensitively     -L  make (some) names lowercase\n",
            "  -X  restore UID/GID info                   -V  retain VMS version numbers\n",
            "  -K  keep setuid/setgid/tacky permissions   -M  pipe through \"more\" pager\n",
            "  -O CHARSET  specify a character encoding for DOS, Windows and OS/2 archives\n",
            "  -I CHARSET  specify a character encoding for UNIX and other archives\n",
            "\n",
            "See \"unzip -hh\" or unzip.txt for more help.  Examples:\n",
            "  unzip data1 -x joe   => extract all files except joe from zipfile data1.zip\n",
            "  unzip -p foo | more  => send contents of foo.zip via pipe into program more\n",
            "  unzip -fo foo ReadMe => quietly replace existing ReadMe if archive file newer\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "quvEd_jf_FXi",
        "outputId": "32a17fd1-101a-4435-d47e-10d2864aa8c2"
      },
      "source": [
        "os.listdir()"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['.config',\n",
              " 'train',\n",
              " 'kaggle.json',\n",
              " 'environment-impact-of-food-production.zip',\n",
              " 'sample_data']"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ha4vVmAD_mIt",
        "outputId": "ea947bf9-f47c-43a1-a27d-d2f8b541883c"
      },
      "source": [
        "! unzip environment-impact-of-food-production.zip"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  environment-impact-of-food-production.zip\n",
            "  inflating: Food_Production.csv     \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EK2AsYC1_1wJ",
        "outputId": "fbce3597-090e-44c4-b3bc-d65fb2900b44"
      },
      "source": [
        "%%R\n",
        "df = read.csv('Food_Production.csv')\n",
        "head(df)"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "         Food.product Land.use.change Animal.Feed Farm Processing Transport\n",
            "1 Wheat & Rye (Bread)             0.1           0  0.8        0.2       0.1\n",
            "2        Maize (Meal)             0.3           0  0.5        0.1       0.1\n",
            "3       Barley (Beer)             0.0           0  0.2        0.1       0.0\n",
            "4             Oatmeal             0.0           0  1.4        0.0       0.1\n",
            "5                Rice             0.0           0  3.6        0.1       0.1\n",
            "6            Potatoes             0.0           0  0.2        0.0       0.1\n",
            "  Packging Retail Total_emissions\n",
            "1      0.1    0.1             1.4\n",
            "2      0.1    0.0             1.1\n",
            "3      0.5    0.3             1.1\n",
            "4      0.1    0.0             1.6\n",
            "5      0.1    0.1             4.0\n",
            "6      0.0    0.0             0.3\n",
            "  Eutrophying.emissions.per.1000kcal..gPO.eq.per.1000kcal.\n",
            "1                                                       NA\n",
            "2                                                       NA\n",
            "3                                                       NA\n",
            "4                                                 4.281357\n",
            "5                                                 9.514379\n",
            "6                                                 4.754098\n",
            "  Eutrophying.emissions.per.kilogram..gPO.eq.per.kilogram.\n",
            "1                                                       NA\n",
            "2                                                       NA\n",
            "3                                                       NA\n",
            "4                                                    11.23\n",
            "5                                                    35.07\n",
            "6                                                     3.48\n",
            "  Eutrophying.emissions.per.100g.protein..gPO.eq.per.100.grams.protein.\n",
            "1                                                                    NA\n",
            "2                                                                    NA\n",
            "3                                                                    NA\n",
            "4                                                              8.638462\n",
            "5                                                             49.394366\n",
            "6                                                             20.470588\n",
            "  Freshwater.withdrawals.per.1000kcal..liters.per.1000kcal.\n",
            "1                                                        NA\n",
            "2                                                        NA\n",
            "3                                                        NA\n",
            "4                                                  183.9116\n",
            "5                                                  609.9837\n",
            "6                                                   80.7377\n",
            "  Freshwater.withdrawals.per.100g.protein..liters.per.100g.protein.\n",
            "1                                                                NA\n",
            "2                                                                NA\n",
            "3                                                                NA\n",
            "4                                                          371.0769\n",
            "5                                                         3166.7606\n",
            "6                                                          347.6471\n",
            "  Freshwater.withdrawals.per.kilogram..liters.per.kilogram.\n",
            "1                                                        NA\n",
            "2                                                        NA\n",
            "3                                                        NA\n",
            "4                                                     482.4\n",
            "5                                                    2248.4\n",
            "6                                                      59.1\n",
            "  Greenhouse.gas.emissions.per.1000kcal..kgCO.eq.per.1000kcal.\n",
            "1                                                           NA\n",
            "2                                                           NA\n",
            "3                                                           NA\n",
            "4                                                    0.9454823\n",
            "5                                                    1.2072708\n",
            "6                                                    0.6284153\n",
            "  Greenhouse.gas.emissions.per.100g.protein..kgCO.eq.per.100g.protein.\n",
            "1                                                                   NA\n",
            "2                                                                   NA\n",
            "3                                                                   NA\n",
            "4                                                             1.907692\n",
            "5                                                             6.267606\n",
            "6                                                             2.705882\n",
            "  Land.use.per.1000kcal..m..per.1000kcal.\n",
            "1                                      NA\n",
            "2                                      NA\n",
            "3                                      NA\n",
            "4                                2.897446\n",
            "5                                0.759631\n",
            "6                                1.202186\n",
            "  Land.use.per.kilogram..m..per.kilogram.\n",
            "1                                      NA\n",
            "2                                      NA\n",
            "3                                      NA\n",
            "4                                    7.60\n",
            "5                                    2.80\n",
            "6                                    0.88\n",
            "  Land.use.per.100g.protein..m..per.100g.protein.\n",
            "1                                              NA\n",
            "2                                              NA\n",
            "3                                              NA\n",
            "4                                        5.846154\n",
            "5                                        3.943662\n",
            "6                                        5.176471\n",
            "  Scarcity.weighted.water.use.per.kilogram..liters.per.kilogram.\n",
            "1                                                             NA\n",
            "2                                                             NA\n",
            "3                                                             NA\n",
            "4                                                        18786.2\n",
            "5                                                        49576.3\n",
            "6                                                         2754.2\n",
            "  Scarcity.weighted.water.use.per.100g.protein..liters.per.100g.protein.\n",
            "1                                                                     NA\n",
            "2                                                                     NA\n",
            "3                                                                     NA\n",
            "4                                                               14450.92\n",
            "5                                                               69825.77\n",
            "6                                                               16201.18\n",
            "  Scarcity.weighted.water.use.per.1000kcal..liters.per.1000.kilocalories.\n",
            "1                                                                      NA\n",
            "2                                                                      NA\n",
            "3                                                                      NA\n",
            "4                                                                7162.104\n",
            "5                                                               13449.891\n",
            "6                                                                3762.568\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BJY6Kxr4AT_e",
        "outputId": "3af5ba04-9e5f-4e69-8ce5-0aaf2936e44d"
      },
      "source": [
        "%%R\n",
        "names(df)"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " [1] \"Food.product\"                                                           \n",
            " [2] \"Land.use.change\"                                                        \n",
            " [3] \"Animal.Feed\"                                                            \n",
            " [4] \"Farm\"                                                                   \n",
            " [5] \"Processing\"                                                             \n",
            " [6] \"Transport\"                                                              \n",
            " [7] \"Packging\"                                                               \n",
            " [8] \"Retail\"                                                                 \n",
            " [9] \"Total_emissions\"                                                        \n",
            "[10] \"Eutrophying.emissions.per.1000kcal..gPO.eq.per.1000kcal.\"               \n",
            "[11] \"Eutrophying.emissions.per.kilogram..gPO.eq.per.kilogram.\"               \n",
            "[12] \"Eutrophying.emissions.per.100g.protein..gPO.eq.per.100.grams.protein.\"  \n",
            "[13] \"Freshwater.withdrawals.per.1000kcal..liters.per.1000kcal.\"              \n",
            "[14] \"Freshwater.withdrawals.per.100g.protein..liters.per.100g.protein.\"      \n",
            "[15] \"Freshwater.withdrawals.per.kilogram..liters.per.kilogram.\"              \n",
            "[16] \"Greenhouse.gas.emissions.per.1000kcal..kgCO.eq.per.1000kcal.\"           \n",
            "[17] \"Greenhouse.gas.emissions.per.100g.protein..kgCO.eq.per.100g.protein.\"   \n",
            "[18] \"Land.use.per.1000kcal..m..per.1000kcal.\"                                \n",
            "[19] \"Land.use.per.kilogram..m..per.kilogram.\"                                \n",
            "[20] \"Land.use.per.100g.protein..m..per.100g.protein.\"                        \n",
            "[21] \"Scarcity.weighted.water.use.per.kilogram..liters.per.kilogram.\"         \n",
            "[22] \"Scarcity.weighted.water.use.per.100g.protein..liters.per.100g.protein.\" \n",
            "[23] \"Scarcity.weighted.water.use.per.1000kcal..liters.per.1000.kilocalories.\"\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uUUp-wxyFxA7",
        "outputId": "b23376d3-caf0-4114-fca2-551455ae946c"
      },
      "source": [
        "%%R\n",
        "summary(df$Total_emissions)"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n",
            "  0.200   0.850   1.600   5.972   6.000  59.600 \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NiNlhPjUBfaT"
      },
      "source": [
        "Defining all the columns of the datasets, our dataset has two 23 columns, some of the important column of interest\n",
        "- Food.product : this columns has name of the food\n",
        "- Total_emissions : total emission of all the gas in food production\n",
        "- Eutrophying.emissions.per.1000kcal..gPO.eq.per.1000kcal.: Eutrophying emission for 1000kcal production of food\n",
        "- Eutrophying.emissions.per.100g.protein..gPO.eq.per.100.grams.protein: Eutrophying emission for 100 g protein production of food\n",
        "- Freshwater.withdrawals.per.1000kcal..liters.per.1000kcal.: Freshwater use in per 1000kcal production from food\n",
        "- Land.use.per.1000kcal..m..per.1000kcal.: land use for 1000Kcal production of food\n",
        "- Scarcity.weighted.water.use.per.1000kcal..liters.per.1000.kilocalories.: Scarcity water used for 1000Kcal production from food\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JMZ9nOTDJ2bf"
      },
      "source": [
        "**Total emission Vs food production**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UpYuSenqED9y",
        "outputId": "47915b5a-1136-44c9-ccdb-42f2f09d6946"
      },
      "source": [
        "%%R\n",
        "summary(df$Total_emissions) ## total emission column is continous random variable "
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n",
            "  0.200   0.850   1.600   5.972   6.000  59.600 \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0qF-khxDKoXY"
      },
      "source": [
        "%%R\n",
        "library(ggplot2)"
      ],
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 497
        },
        "id": "6_Pm-GgcLiyI",
        "outputId": "4f56c804-aa2e-4744-be89-821a52b7ad9b"
      },
      "source": [
        "%%R\n",
        "ggplot(df, aes(x=Food.product, y=Total_emissions)) + \n",
        "  geom_bar(stat = \"identity\")+coord_flip()+geom_point(\n",
        "    size = 3,\n",
        "    alpha = 10\n",
        "  )"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rDgkU5ddL4kX"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Y7YV0Cz0oQ9W"
      },
      "source": [
        "- some of the food which has most impact on the envoriment in term of total emission are Beef, Lamb & Mutton, cheese, shrimps, pig meat, palm oil, cofee, dark choclate\n",
        "- foods like apples, bananas, vegetable, cirtus fruit are less contributer of the total emission"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "A3ox1TYepMsP"
      },
      "source": [
        "**Let's study greenhouse emmision from the food products**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7vmu_uhCoQQs",
        "outputId": "a09dcad0-06c5-485c-9413-00004f3a9e3f"
      },
      "source": [
        "%%R\n",
        "summary(df$Greenhouse.gas.emissions.per.1000kcal..kgCO.eq.per.1000kcal.) ##   green house emission per 1000kcal is continous random variable"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n",
            " 0.06992  0.62842  1.35135  5.63394  5.33514 50.94643       10 \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 497
        },
        "id": "5cWBs-PNrGPD",
        "outputId": "b20ece94-8f5b-4591-a50e-f4c3b3d37e4a"
      },
      "source": [
        "%%R\n",
        "hist(df$Greenhouse.gas.emissions.per.1000kcal..kgCO.eq.per.1000kcal.)"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "p8HckQIErWLA"
      },
      "source": [
        "- most of the food produce the greenhouse in range of 0-10 kgCO.eq.per.1000kcal"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 497
        },
        "id": "sOeXF_LepkFM",
        "outputId": "0f5726af-fd3b-4633-da55-e410e51ae9de"
      },
      "source": [
        "%%R\n",
        "ggplot(df, aes(x=Food.product, y=Greenhouse.gas.emissions.per.1000kcal..kgCO.eq.per.1000kcal.)) + \n",
        "  geom_bar(stat = \"identity\")+coord_flip()+geom_point(\n",
        "    size = 3,\n",
        "    alpha = 10\n",
        "  )"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-2dj6UVwqgPr"
      },
      "source": [
        "- cofee, beef is some of the biggest contributer of the greenhouse emission"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fwat2kkBro48"
      },
      "source": [
        "**Frshwater used in the production of per 1000cal from the food products**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VA-XxAM_p6ot",
        "outputId": "42642929-48ea-4c33-fe9e-8164fbdf0e8a"
      },
      "source": [
        "%%R\n",
        "summary(df$Freshwater.withdrawals.per.1000kcal..liters.per.1000kcal.)"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n",
            "   0.724  106.928  338.059  504.189  694.805 2062.179       13 \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 497
        },
        "id": "mKNjMsGAr9w8",
        "outputId": "ed5f68d1-1267-43bf-b571-ee08781a9bca"
      },
      "source": [
        "%%R\n",
        "hist(df$Freshwater.withdrawals.per.1000kcal..liters.per.1000kcal.) ## this is a continous random variable"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "05EbZ9iGsp3o"
      },
      "source": [
        "- most food used 0-1000 liter of water for production of 1000kcal from the food products\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 497
        },
        "id": "wQ5rldoPsC57",
        "outputId": "6dc8f00c-7969-4ab6-b825-f299743207bd"
      },
      "source": [
        "%%R\n",
        "ggplot(df, aes(x=Food.product, y=Freshwater.withdrawals.per.1000kcal..liters.per.1000kcal.)) + \n",
        "  geom_bar(stat = \"identity\")+coord_flip()+geom_point(\n",
        "    size = 3,\n",
        "    alpha = 10\n",
        "  )"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "V9Dzu8Iet8OL"
      },
      "source": [
        "- fish use most fresh water in producing 1000Kcal\n",
        "- intrestingly tomatoes in plant based product\n",
        " use most water in producing 1000Kcal "
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "OqdVGIO40nSU"
      },
      "source": [
        "**use of land in production of 1000kcal from food products**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JtT4uO840mhz",
        "outputId": "4a09e0b7-fbc7-45a0-dfb5-eeb8de3339ed"
      },
      "source": [
        "%%R\n",
        "summary(df$Land.use.per.1000kcal..m..per.1000kcal.) ## land use is a continous random variable"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n",
            "  0.2738   1.3125   2.9762  12.4232   6.6054 119.4908       10 \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 497
        },
        "id": "mBuyrvc9soiD",
        "outputId": "0cfbe0be-1604-418d-af6c-8933af0c460f"
      },
      "source": [
        "%%R\n",
        "hist(df$Land.use.per.1000kcal..m..per.1000kcal.)"
      ],
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 497
        },
        "id": "_91vVgmk1Ihp",
        "outputId": "5b34edbb-b463-4f7c-c16e-a4ded2065ebd"
      },
      "source": [
        "%%R\n",
        "ggplot(df, aes(x=Food.product, y=Land.use.per.1000kcal..m..per.1000kcal.)) + \n",
        "  geom_bar(stat = \"identity\")+coord_flip()+geom_point(\n",
        "    size = 3,\n",
        "    alpha = 10\n",
        "  )"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O5DlrZOr1uX2"
      },
      "source": [
        "- Beef, lamb mutton, coffee, chesse use most of the land in production of 1000Kcal"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UHavc5N11WRx"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}